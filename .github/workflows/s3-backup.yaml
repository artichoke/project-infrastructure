---
name: "S3 repository backup"
"on":
  push:
    branches:
      - trunk
    paths:
      - .github/workflows/s3-backup.yaml
  pull_request:
    branches:
      - trunk
    paths:
      - .github/workflows/s3-backup.yaml
  schedule:
    - cron: "0 12 2 * *" # 12pm GMT which is either 3am or 4am Pacific
jobs:
  terraform:
    name: Backup
    permissions:
      id-token: write
      contents: read
      issues: read
      pull-requests: read
      repository-projects: read
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::447522982029:role/gha-project-infrastructure-s3-backup-20220220212010997600000001
          role-session-name: GitHubActionsSession@s3-backup

      - name: Show AWS caller identity
        run: aws sts get-caller-identity

      - name: Install python-github-backup
        run: pip install github-backup==0.40.1

      - name: Backup repository
        run: github-backup artichoke --as-app --token "${{ secrets.GITHUB_TOKEN }}" --output-directory out --organization --repository project-infrastructure --issues --issue-comments --issue-events --pulls --pull-comments --pull-commits --pull-details --labels --milestones --repositories --wikis --private

      - name: Make a tar archive
        id: tar_archive
        run: |
          tar_archive_name="project-infrastructure-$(date '+%Y-%m-%d').tar.gz"
          tar czf "${tar_archive_name}" out
          echo "::set-output name=file_name::${tar_archive_name}"

      - name: Make a zip archive
        id: zip_archive
        run: |
          zip_archive_name="project-infrastructure-$(date '+%Y-%m-%d').zip"
          zip -r "${zip_archive_name}" out
          echo "::set-output name=file_name::${zip_archive_name}"

      - name: Upload archives to S3
        run: |
          aws s3 cp ${{ steps.tar_archive.outputs.file_name }} s3://artichoke-forge-github-backups-us-west-2/project-infrastructure/archives/tarballs/${{ steps.tar_archive.outputs.file_name }}
          aws s3 cp ${{ steps.zip_archive.outputs.file_name }} s3://artichoke-forge-github-backups-us-west-2/project-infrastructure/archives/zips/${{ steps.zip_archive.outputs.file_name }}

      - name: Backup releases
        run: github-backup artichoke --as-app --token "${{ secrets.GITHUB_TOKEN }}" --output-directory out-releases --organization --repository project-infrastructure --releases --assets --private

      - name: Upload releases to S3
        run: aws s3 cp --recursive out-releases/repositories/project-infrastructure/releases s3://artichoke-forge-github-backups-us-west-2/project-infrastructure/releases/
