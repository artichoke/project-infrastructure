---
name: CI
"on":
  push:
    branches:
      - trunk
  pull_request:
    branches:
      - trunk
  schedule:
    - cron: "0 0 * * TUE"
jobs:
  terraform:
    name: Lint and format terraform
    runs-on: ubuntu-latest
    # https://www.terraform.io/docs/github-actions/getting-started.html
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TF_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.TF_AWS_SECRET_KEY }}
          aws-region: us-west-2

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.x

      - name: "Format aws module"
        run: terraform fmt -check -diff
        working-directory: "aws"

      - name: "Initialize aws module"
        run: terraform init
        working-directory: "aws"

      - name: "Validate aws module"
        run: terraform validate -no-color
        working-directory: "aws"

      - name: "Format github module"
        run: terraform fmt -check -diff
        working-directory: "github"

      - name: "Initialize github module"
        run: terraform init
        working-directory: "github"

      - name: "Validate github module"
        run: terraform validate -no-color
        working-directory: "github"

      - name: "Format remote-state module"
        run: terraform fmt -check -diff
        working-directory: "remote-state"

      - name: "Initialize remote-state module"
        run: terraform init
        working-directory: "remote-state"

      - name: "Validate remote-state module"
        run: terraform validate -no-color
        working-directory: "remote-state"

  ruby:
    name: Lint and format Ruby
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Ruby toolchain
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ".ruby-version"
          bundler-cache: true

      - name: Lint and check formatting with Rubocop
        run: bundle exec rubocop --format github

  text:
    name: Lint and format text
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Lint and check formatting with prettier
        run: npx prettier --check '**/*'

      - name: Lint YAML sources with yamllint
        run: |
          yamllint --version
          echo "Linting YAML sources with yamllint ..."
          yamllint --strict --format github .
          echo "OK"
