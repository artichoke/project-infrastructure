---
name: CI
"on":
  push:
    branches:
      - trunk
  pull_request:
    branches:
      - trunk
  schedule:
    - cron: "0 0 * * TUE"
jobs:
  terraform:
    name: Lint and format terraform
    runs-on: ubuntu-latest
    # https://www.terraform.io/docs/github-actions/getting-started.html
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v1

      - name: "Format aws module"
        run: terraform fmt -check -diff
        working-directory: "aws"

      - name: "Initialize aws module"
        run: terraform init
        working-directory: "aws"
        env:
          AWS_ACCESS_KEY: ${{ secrets.TF_AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.TF_AWS_SECRET_KEY }}

      - name: "Validate aws module"
        run: terraform validate -no-color
        working-directory: "aws"

      - name: "Format github module"
        run: terraform fmt -check -diff
        working-directory: "github"

      - name: "Initialize github module"
        run: terraform init
        working-directory: "github"
        env:
          AWS_ACCESS_KEY: ${{ secrets.TF_AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.TF_AWS_SECRET_KEY }}

      - name: "Validate github module"
        run: terraform validate -no-color
        working-directory: "github"

      - name: "Format remote-state module"
        run: terraform fmt -check -diff
        working-directory: "remote-state"

      - name: "Initialize remote-state module"
        run: terraform init
        working-directory: "remote-state"
        env:
          AWS_ACCESS_KEY: ${{ secrets.TF_AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.TF_AWS_SECRET_KEY }}

      - name: "Validate remote-state module"
        run: terraform validate -no-color
        working-directory: "remote-state"

  text:
    name: Lint and format text
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Lint and check formatting with prettier
        run: npx prettier --check '**/*'

      - name: Lint YAML sources with yamllint
        run: |
          sudo -H python3 -m pip install --upgrade pip setuptools wheel
          sudo -H python3 -m pip install --upgrade yamllint
          yamllint --version
          echo "Linting YAML sources with yamllint ..."
          yamllint --strict .
          echo "OK"
